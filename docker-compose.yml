version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pokedex
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 20s
      retries: 10

  api:
    build: .
    image: tsiang/pokedex-api:latest
    container_name: api
    restart: unless-stopped
    ports:
      - "9000:9000"
    dns:
      - 8.8.8.8
      - 8.8.4.4
    environment:
      NODE_ENV: development
      PORT: 9000
      DEV_DB_USERNAME: postgres
      DEV_DB_PASSWORD: postgres
      DEV_DB_NAME: pokedex
      DEV_DB_HOSTNAME: postgres
      DEV_DB_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_CACHE_TTL: 3600
      WEATHER_API_KEY: 7b7048a95c0160c9b69a853ee70506cc
      WEATHER_API_URL: https://api.openweathermap.org/data/2.5/weather
      DEFAULT_LATITUDE: 48.8566
      DEFAULT_LONGITUDE: 2.3522
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    command: sh -c "sleep 10 && npm run db:migrate && npm run db:seed && npm run dev"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./configs/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - api

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./configs/monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

